import * as bip39 from "bip39";
import * as ed25519 from "ed25519-hd-key";
import * as base58 from "bs58";
import {fromHex, toHex} from "@cosmjs/encoding";
import * as nacl from 'tweetnacl'

const mnemonic = "ecology tone orange sell expect live goddess banner dash exhaust wrap market"
const path = "m/44'/118'/0'/0'/0'"
const hexMsg = "af82"

// Use bip39/ed25519-hd-key to derive seed by mnemonic and path
const seed = bip39.mnemonicToSeedSync(mnemonic);
const derivedSeed = ed25519.derivePath(path, seed.toString("hex")).key;

// sovrin-did use tweetnacl internally, use tweetnacl sign method can get
// the same signature as interchain API.
const keypairNacl = nacl.sign.keyPair.fromSeed(derivedSeed)
// Here publicKeyBase58 is the same as ed25519 publicKeyBase58 generated by interchain.getDidDoc(0)
const publicKeyBase58 = base58.encode(Buffer.from(keypairNacl.publicKey));
console.log("publicKeyBase58", publicKeyBase58)
const signature_array = nacl.sign.detached(fromHex(hexMsg), keypairNacl.secretKey);
// Here signature_hex_by_nacl is the same as `interchain.signMessage(hexMsg, "ed25519", 0)`
console.log("signature_hex_by_nacl", toHex(signature_array))
const verified = nacl.sign.detached.verify(fromHex(hexMsg), signature_array, keypairNacl.publicKey);
console.log("verified_by_nacl", verified)
